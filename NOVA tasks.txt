NOVA tasks



Levels:

-00: simple looper 1 (from the left)
-01: simple looper 2 (from the right)
-02: bouncers v1
-03: sine baddies
-04: star trek - vertical linear bouncing, with slight speed variances in mirrored pairs
-05: BIG bugs bursting to make 3 small bugs each
-06: Zag left
-07: Zag right
-08: semicircle bottom from right top from left
-09: bags of bouncers

*10: infinity, 2 lives, comes from top right, then loops
*11: serpentine, starting bottom left and right, winding inwards

*12: buglike spitters of smaller baddies that obey mini sine paths. one at the top, one below, bouncing left/right. they seem to spit a max number of them until the screen is quite full
*13: two groups come in from the left at the same time, different heights, move into circle patterns, with one inside the other
*14: bouncers: LOTS of them, and they take more hits
*15: a ship scrolls right to left, dropping minibouncers behind it, two layers worth
*16: a tight semi-sine pattern top and bottom, that traps the player and doesn't repeat perfectly

AND THAT'S IT?!?!?! (evidently, I must have remembered it wrongly from my childhood!)
  ... I think I may add a boss level for 'remix' mode.

------------
Tech Debt:

* Separate play preferences (slowmo, start level, etc) into a scriptable object, perhaps
  so that we don't have to check it in. This would be wildly annoying if I were in a team.

* Bouncer prefab doesn't contain its bouncer behaviour, they're in the wave's override

* revisit colliders, these plectrum shapes are used inappropriately in many instances

* revisit collision full stop, as there are some pop-through issues, need sweeps




DONE tasks ---------------------------


PLAYER DEATH
- need a SPECIAL bigger explosion for the player
  ! the original uses a big central explosion and three small ones, on the nose and wings
- need to cause baddies to kill you on collision (and not them)
- need an invulnerability mode for testing


Bouncing Balls (Level 3)
- get sprites
- create a single baddie with new behaviour
- initial velocity should have some random component
- random component to the rebound, too, they can come away with MORE energy
- they DO animate according to their direction of travel

- Starfield!

Scene management
- Loader scene, very minimal
- Splash screen, quite minimal but will need:
  - fading
  - input to permit us to move forwards to the game
  * possibly (later) make it alternate to the highscore screen? (and/or attract mode)
  * starfield

* Perhaps explosions should have a time delay parameter so clusters can be made all at once


- PLAYER MUST BE SCREEN BOUNDED!

- Bouncers need to take two shots (note: not sure they did, actually, but hey ho)

Lives manager
- need an initial number of lives
- Remove a life each time we die
- and turn off one of the lives sprites
- must be able to reset the lives by turning all the sprites back on
  - and of course restoring the max number of lives
- must know when we've died our last time
  - for now, just spit out some debug

- On death:
  - spawn explosion
  - need to hide the player
  - can't shoot when dead :)
  - need a timer for when the player's killed (for now, use the same max value as between waves)
  - clean up the old wave
  - decrease number of lives

- want to be able to kill aliens
  - so the hit detection must tell them to die
  - which should trigger their explosion (and later explosion GROUP)
  - active aliens should add themselves into a list in the wave manager
  - when they die, they should remove themselves from the list
  - debug output the number as they add themselves
  - debug output the number as they are killed

SPAWNING
  - must spawn just the 1st wave of aliens for now
  - when it's depleted to zero, spawn the next list
    - perhaps a short timer between waves? but the delay in the wavemanager
  - when we're out of waves, for now just debug GAME FINISHED or similar

WAVES actually doing things:

- create a movement script for the 1st wave
  - start moving in a direction (set by an editor parameter)
  - according to direction, also check for screen side collision
  - first move down (will need to calc our descend-to height)
  - then move back up (will need to store our origin height)


  - occasionally emit shots
    - will need a baddy shot pool

